import type { Tree } from '@nrwl/devkit';
import type { GeneratorOptions } from '../../schema';
import type { MigrationProjectConfiguration, Target, ValidationResult, WorkspaceRootFileTypesInfo } from '../../utilities';
import { Logger } from '../../utilities';
import type { BuilderMigratorClassType } from '../builders';
import { BuilderMigrator } from '../builders';
import { Migrator } from '../migrator';
export declare abstract class ProjectMigrator<TargetType extends string = string> extends Migrator {
    protected readonly options: GeneratorOptions;
    protected readonly targets: Record<TargetType, Target>;
    get projectName(): string;
    protected builderMigrators: BuilderMigrator[];
    protected readonly targetNames: Partial<Record<TargetType, string>>;
    constructor(tree: Tree, options: GeneratorOptions, targets: Record<TargetType, Target>, project: MigrationProjectConfiguration, rootDir: string, logger?: Logger, supportedBuilderMigrators?: BuilderMigratorClassType[]);
    getWorkspaceRootFileTypesInfo(): WorkspaceRootFileTypesInfo;
    validate(): ValidationResult;
    protected convertPath(originalPath: string): string;
    protected moveDir(from: string, to: string): void;
    private collectTargetNames;
    private createBuilderMigrators;
}
